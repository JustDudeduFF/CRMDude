import { onValue, ref, remove } from 'firebase/database'
import React, { useEffect, useState } from 'react'
import { db } from '../../FirebaseConfig';
import { useNavigate } from 'react-router-dom';

export default function TicketTable() {
  const username = localStorage.getItem('susbsUserid');
  const navigate = useNavigate();

  const ticketRef = ref(db, `Subscriber/${username}/Tickets`);
  const [arrayticket, setArrayTicket] = useState([]);


  useEffect(() => {
    // const timer = setInterval(() => {
    //   setCurrentTime(new Date());
    // }, 1000);


    const fetchTicketsdata = onValue(ticketRef, (ticketSnap => {

      if(ticketSnap.exists()){
        const ticketArray = [];
        ticketSnap.forEach(Childticket => {
          const ticketno = Childticket.val().ticketno;
          const source = Childticket.val().source;
          const ticketconcern = Childticket.val().ticketconcern;
          const assignto = Childticket.val().assignto;
          const description = Childticket.val().description;
          const assigntime = Childticket.val().assigntime;
          const assigndate = Childticket.val().assigndate;
          const status = Childticket.val().status;
          const closeby = Childticket.val().closeby;
          const closetime = Childticket.val().closetime;
          const closedate = Childticket.val().closedate;


          

          ticketArray.push({ticketno, source, ticketconcern, assignto, description, assigntime, assigndate, status, closeby, closedate, closetime});
        });
        setArrayTicket(ticketArray);
      }
    }))

    return () => {fetchTicketsdata();
      // clearInterval(timer);
    };
  }, [username]);




  return (
    <div>

    
    <div style={{overflowX:'auto'}}>
                <table className="table">
                <thead>
                    <tr>
                        <th scope="col">Ticket No.</th>
                        <th scope="col">Source</th>
                        <th scope="col">Creation Date</th>
                        <th scope="col">Generated By</th>
                        <th scope="col">Assigned to</th>
                        <th scope='col'>Concern</th>
                        {/* <th scope="col">Assigned Time</th> */}
                        <th scope="col">Closed By</th>
                        <th scope="col">Close Timing</th>
                        {/* <th scope='col'>TAT</th> */}
                        <th scope='col'>Current Status</th>
                        <th scope='col'>Description</th>
                        
                    </tr>
                </thead>
                <tbody className='table-group-divider'>

                  {
                    arrayticket.length > 0 ? (
                      arrayticket.map(({ticketno, source, ticketconcern, assignto, description, assigntime, assigndate, status, closeby, closedate, closetime}, index) => (
                        <tr key={index}> 
                        <td style={{color:'green ',  cursor:'pointer'}} className="btn" data-bs-toggle="dropdown" aria-expanded="false">{ticketno}</td>
                        <ol className="dropdown-menu">
                          <li onClick={() => {
                            const ticketdata = {
                              assigndate : `${assigndate} ${assigntime}`,
                              ticketconcern: ticketconcern,
                              assignto: assignto,
                              description: description,
                              ticketno: ticketno
                              
                            }
                            navigate('modifyticket', {state: {ticket : ticketdata}} );
                          }} className='dropdown-item'>Update Ticket</li>
                          <li className='dropdown-item'>Cancel Ticket</li>
                          <li onClick={() => 
                            {remove(ref(db, `Subscriber/${username}/Tickets/${ticketno}`))}
                          } className='dropdown-item'>Delete Ticket</li>
                        </ol>
                            <td>{source}</td>
                            <td>{`${assigndate} ${assigntime}`}</td>
                            <td>Shivam Chauhan</td>
                            <td>{assignto}</td>
                            <td>{ticketconcern}</td>
                            <td>{closeby}</td>
                            <td>{`${closedate} ${closetime}`}</td>
                            <td style={{color:status === 'Completed' ? 'green' : 'red'}}>{status}</td>
                            <td>{description}</td>
                            
                        </tr>
                      ))
                    ) : (
                      <td colSpan="8" style={{ textAlign: 'center' }}>No Tickets Availabale</td>
                    )
                  }
                
                </tbody>

                </table>

            </div>
            </div>

  )
}
